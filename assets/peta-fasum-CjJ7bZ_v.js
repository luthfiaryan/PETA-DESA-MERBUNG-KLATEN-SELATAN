import"./flyonui-KD5sQRfT.js";import{l as u,t as b,f as h,c as k,s as L,b as E,g as M}from"./api-B-mpMLfD.js";const t={map:null,layerControl:null,fasumLayer:null,allFasumData:null,merbungBoundary:null,searchTerm:"",searchTimeout:null,visibleMarkers:{},categories:[{name:"masjid",file:"masjid.geojson",isActive:!0},{name:"tps",file:"tps.geojson",isActive:!0},{name:"sekolah",file:"sekolah.geojson",isActive:!0},{name:"poskampling",file:"poskampling.geojson",isActive:!0},{name:"makam",file:"makam.geojson",isActive:!0}],colors:{masjid:"#2ecc71",sekolah:"#3498db",poskampling:"#e67e22",tps:"#e74c3c",makam:"#34495e"},routing:{control:null,startMarker:null,endMarker:null,startPoint:null,endPoint:null,selectingStart:!1,selectingEnd:!1,markerIcon:u.icon({iconUrl:"/images/maps/marker-icon.png"})}};async function T(){await B(),I(),S(),F(),C(),v(),f()}async function B(){try{const e=t.categories.map(i=>fetch(`/data/${i.file}`).then(r=>r.json())),o=fetch("/data/merbung.geojson").then(i=>i.json()),[n,...d]=await Promise.all([o,...e]);t.merbungBoundary=n,d.forEach((i,r)=>{const a=t.categories[r].name;i.features.forEach(c=>c.properties._category=a)}),t.allFasumData={type:"FeatureCollection",features:d.flatMap(i=>i.features)},console.log("ðŸš€ ~ All GeoJSON data loaded and combined:",t.allFasumData)}catch(e){console.error("Failed to load GeoJSON data:",e)}}function I(){if(t.map=u.map("map"),b.OpenStreetMap.addTo(t.map),t.layerControl=u.control.layers(b,{}).addTo(t.map),t.merbungBoundary){const e=u.geoJSON(t.merbungBoundary,{style:{color:"red",weight:2,fillOpacity:0}}).addTo(t.map);t.map.fitBounds(e.getBounds()),t.layerControl.addOverlay(e,"Batas Wilayah")}}function f(){const e=t.categories.filter(a=>a.isActive).map(a=>a.name),o=t.searchTerm.toLowerCase(),n=t.allFasumData.features.filter(a=>{const c=a.properties,l=c.Nama.toLowerCase().includes(o),s=e.includes(c._category);return l&&s});t.fasumLayer&&(t.map.removeLayer(t.fasumLayer),t.layerControl.removeLayer(t.fasumLayer));const d=document.getElementById("search-result-container");d.innerHTML="";const i=document.createDocumentFragment();t.visibleMarkers={},n.forEach(a=>{const{Nama:c,_category:l}=a.properties,s=document.createElement("button");s.type="button",s.className="btn btn-text btn-primary justify-start h-fit rounded-md text-left w-full",s.innerHTML=`
      <div class="p-2 text-xs flex flex-row gap-2 items-center text-left">
      <span class="${h[l]} inline-block align-middle size-8 mr-1"></span>
      <div class="">
        <h5 class="relative wrap-break-word mb-1 text-base text-base-content font-bold">${c}</h5>
        <span class="badge badge-outline badge-sm badge-primary capitalize">${l}</span>
      </div>
      </div>`,s.addEventListener("click",()=>x(c));const m=document.createElement("hr");m.className="text-base-content/20",i.appendChild(s),i.appendChild(m)}),d.appendChild(i);function r(a,c){const l=a.properties._category,s=u.marker(c,{icon:M(l,t.colors[l]),title:a.properties.Nama,riseOnHover:!0});return t.visibleMarkers[a.properties.Nama]=s,s}t.fasumLayer=u.geoJSON({type:"FeatureCollection",features:n},{pointToLayer:r,onEachFeature:(a,c)=>{const l=E(a.properties);c.bindPopup(l,{className:"marker-popup without-tip"})}}).addTo(t.map),t.layerControl.addOverlay(t.fasumLayer,"Fasilitas Umum")}function v(){const e=document.getElementById("categoryFilter"),o=t.categories.every(a=>a.isActive);console.log("ðŸš€ ~ renderFilterButtons ~ allFiltersSelected:",o);let r=`
    <button data-action="${o?"none":"all"}" class="badge shrink-0 badge-lg cursor-pointer relative badge-primary mr-2 rounded-full">
      <span class="${o?"icon-[tabler--trash]":"icon-[tabler--check]"} size-4.5"></span>
      ${o?"Hapus Filter":"Pilih Semua"}
      <div class="border-l-2 border-base-content h-5 absolute right-0 translate-x-2.5"></div>
    </button>`;r+=t.categories.map(a=>{const c=a.isActive?"badge-primary":"badge-outline";return`<button data-category="${a.name}" class="badge shrink-0 badge-lg cursor-pointer w-fit ${c} rounded-full capitalize">${a.name}</button>`}).join(""),e.innerHTML=r}function F(){const e=document.getElementById("categoryFilter"),o=document.getElementById("search-fasum"),n=document.getElementById("clear-search-button"),d=document.getElementById("search-icon"),i=document.getElementById("complain-form-element"),r=document.getElementById("form-complain-status");n.addEventListener("click",()=>{o.value="",t.searchTerm="",f(),d.dataset.icon="search"}),o.addEventListener("input",l=>{t.searchTerm=l.target.value,d.dataset.icon=t.searchTerm?"x":"search",clearTimeout(t.searchTimeout),t.searchTimeout=setTimeout(()=>f(),400)}),e.addEventListener("click",l=>{const s=l.target.closest("button");if(!s)return;const m=s.dataset.category,p=s.dataset.action;if(p){const g=p==="all";t.categories.forEach(y=>y.isActive=g)}else if(m){const g=t.categories.find(y=>y.name===m);g&&(g.isActive=!g.isActive)}v(),f()}),HSOverlay.autoInit();const{element:a}=HSOverlay.getInstance("#form-complain",!0);a.on("close",k),window.openComplainForm=l=>{setTimeout(()=>{document.getElementById("fasum_name").value=l},100),r.innerHTML="",a.open()},i.addEventListener("submit",c);async function c(l){const s=document.getElementById("form-complain-submit-button");l.preventDefault();const m=new FormData(l.target);m.get;const p={name:m.get("name")||"",email:m.get("email")||"",phoneNumber:m.get("phone")||"",complainee:m.get("fasum_name"),subject:m.get("complaint_subject"),complaintText:m.get("complaint_text")};if(!p.subject){r.className="text-error",r.innerHTML="Judul Keluhan tidak boleh kosong!";return}if(!p.complaintText){r.className="text-error",r.innerHTML="Isi Keluhan tidak boleh kosong!";return}s.disabled=!0,s.innerHTML="Mengirim",await L()?(r.className="text-success",r.innerHTML=`
        Keluhan berhasil dikirim!
        <div class="radial-progress auto-close-modal text-primary" style="--value:100; --size:1rem; --thickness:3px" role="progressbar" aria-label="Radial Progress"></div>`,k(),setTimeout(()=>{a.close(),r.innerHTML="",s.disabled=!1},3e3)):r.innerHTML="Gagal mengirim keluhan. Silakan coba lagi.",s.innerHTML="Kirim"}}function x(e){const o=t.visibleMarkers[e];if(o){const n=structuredClone(o?.getLatLng());n.lat+=7e-4,o.openPopup(),t.map.flyTo(n,18,{duration:1}),document.getElementById("close-search")?.click()}else console.warn(`Marker with name ${e} not found.`)}function S(){const e=document.getElementById("legend-content");let o='<div class="h-full"><b>Legenda Fasilitas Umum</b><br>';for(const n of t.categories)o+=`
      <div class="flex items-center gap-2">
        <span style="background:${t.colors[n.name]}" class="size-4 ${h[n.name]}"></span>
        <span class="capitalize">${n.name}</span>
      </div>`;e.innerHTML=o+"</div>"}function C(){const{routing:e}=t;document.getElementById("routeToggleBtn").addEventListener("click",()=>{const n=document.getElementById("routingPanel");n.style.display=n.style.display==="none"||n.style.display===""?"block":"none"}),document.getElementById("initalPointBtn").addEventListener("click",()=>{e.selectingStart=!0,e.selectingEnd=!1,alert("Klik di peta untuk titik awal")}),document.getElementById("endPointBtn").addEventListener("click",()=>{e.selectingEnd=!0,e.selectingStart=!1,alert("Klik di peta untuk titik tujuan")}),document.getElementById("initalResetBtn").addEventListener("click",()=>{e.startMarker&&t.map.removeLayer(e.startMarker),e.startMarker=null,e.startPoint=null}),document.getElementById("endResetBtn").addEventListener("click",()=>{e.endMarker&&t.map.removeLayer(e.endMarker),e.endMarker=null,e.endPoint=null}),document.getElementById("findRouteBtn").addEventListener("click",o),t.map.on("click",n=>{e.selectingStart?(e.startMarker&&t.map.removeLayer(e.startMarker),e.startPoint=n.latlng,e.startMarker=u.marker(e.startPoint,{icon:e.markerIcon}).addTo(t.map),e.selectingStart=!1):e.selectingEnd&&(e.endMarker&&t.map.removeLayer(e.endMarker),e.endPoint=n.latlng,e.endMarker=u.marker(e.endPoint,{icon:e.markerIcon}).addTo(t.map),e.selectingEnd=!1)});function o(){if(!e.startPoint||!e.endPoint){alert("Tentukan titik awal dan tujuan.");return}e.control&&t.map.removeControl(e.control),e.control=u.Routing.control({waypoints:[e.startPoint,e.endPoint],lineOptions:{styles:[{color:"green",weight:4}]},routeWhileDragging:!1,createMarker:()=>null}).addTo(t.map),e.control.on("routesfound",n=>{const d=n.routes[0].summary,i=Math.round(d.totalTime/60),r=(d.totalDistance/1e3).toFixed(2);document.getElementById("routeInfo").innerText=`Durasi: ${i} menit | Jarak: ${r} km`})}}document.addEventListener("DOMContentLoaded",T);
