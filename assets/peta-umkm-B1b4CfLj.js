import"./flyonui-KD5sQRfT.js";import{l as d,t as M,d as b,c as f,s as B,e as L,h as E}from"./api-B-mpMLfD.js";const h={Fashion:"Fashion & Aksesoris","Produk Makanan Berat":"Makanan & Minuman",Aksesoris:"Fashion & Aksesoris","Produk Makanan Ringan":"Makanan & Minuman",Kerajinan:"Jasa","Bahan Makanan":"Bahan Baku","Produk Minuman":"Makanan & Minuman",Kelontong:"Makanan & Minuman","Bahan Bangunan":"Lainnya",Otomotif:"Jasa","Jasa Penjahit":"Jasa","Produk Makanan dan Minuman":"Makanan & Minuman","Minuman Herbal Tradisional":"Makanan & Minuman","Minuman Tradisional":"Makanan & Minuman","Produk Bumbu Masak":"Bahan Baku","Produk Ikan Olahan":"Makanan & Minuman","Bahan Pertanian":"Lainnya",Percetakan:"Lainnya","Kebutuhan Hewan Peliharaan":"Lainnya","Produk Makanan Berat dan Ringan":"Makanan & Minuman","Produk Minuman Herbal":"Makanan & Minuman"},t={map:null,layerControl:null,umkmLayer:null,allUmkmData:null,merbungBoundary:null,searchTerm:"",searchTimeout:null,visibleMarker:{},categories:[{name:"Bahan Baku",isActive:!0},{name:"Jasa",isActive:!0},{name:"Makanan & Minuman",isActive:!0},{name:"Fashion & Aksesoris",isActive:!0},{name:"Lainnya",isActive:!0}],colors:{},routing:{control:null,startMarker:null,endMarker:null,startPoint:null,endPoint:null,selectingStart:!1,selectingEnd:!1,markericon:d.icon({iconUrl:"/images/maps/marker-icon.png"})}};t.categories.forEach((e,r)=>t.colors[e.name]=`hsl(${r*20}, 70%, 50%)`);async function T(){await I(),P(),C(),x(),A(),v(),k()}async function I(){try{const[e,r]=await Promise.all([fetch("/data/umkm.geojson"),fetch("/data/merbung.geojson")]),n=await e.json();n.features.forEach(u=>{const c=u.properties;h[c.Jenis_UMKM]&&(c.Jenis_UMKM=h[c.Jenis_UMKM])}),t.allUmkmData=n,t.merbungBoundary=await r.json()}catch(e){console.error("Failed to load GeoJSON data:",e)}}function P(){if(t.map=d.map("map"),M.OpenStreetMap.addTo(t.map),t.layerControl=d.control.layers(M,{}).addTo(t.map),t.merbungBoundary){const e=d.geoJSON(t.merbungBoundary,{style:{color:"red",weight:2,fillOpacity:0}}).addTo(t.map);t.map.fitBounds(e.getBounds()),t.layerControl.addOverlay(e,"Batas Wilayah")}}function k(){const e=t.categories.filter(a=>a.isActive).map(a=>a.name),r=t.searchTerm.toLowerCase(),n=t.allUmkmData.features.filter(a=>{const l=a.properties,o=l.ID.toLowerCase().includes(r),m=e.includes(l.Jenis_UMKM);return o&&m});t.umkmLayer&&(t.map.removeLayer(t.umkmLayer),t.layerControl.removeLayer(t.umkmLayer));const u=document.getElementById("search-result-container");u.innerHTML="";const c=document.createDocumentFragment();n.forEach(a=>{const{ID:l,Jenis_UMKM:o,ALAMAT:m}=a.properties,s=document.createElement("button");s.type="button",s.className="btn btn-text btn-primary justify-start h-fit rounded-md text-left card-side max-w-sm",s.innerHTML=`
      <div class=" p-2 text-xs gap-0 text-left">
        <h5 class="relative wrap-break-word mb-1 text-base text-base-content font-bold">
          <span class="${b[o]} inline-block align-middle size-4 mr-1"></span>${l}
        </h5>
        <span class="badge mb-1 badge-outline badge-sm badge-primary">${o}</span>
        <p class="text-base-content">${m}</p>
      </div>
    `,s.addEventListener("click",()=>w(l));const p=document.createElement("hr");p.className="text-base-content/20",c.appendChild(s),c.appendChild(p)}),u.appendChild(c);function i(a,l){const o=d.marker(l,{icon:E(a.properties.Jenis_UMKM,t.colors[a.properties.Jenis_UMKM]),title:a.properties.ID,riseOnHover:!0});return t.visibleMarker[a.properties.ID]=o,o}t.umkmLayer=d.geoJSON({type:"FeatureCollection",features:n},{pointToLayer:i,onEachFeature:(a,l)=>{const o=L(a.properties);l.bindPopup(o,{className:"marker-popup without-tip"})}}).addTo(t.map),t.layerControl.addOverlay(t.umkmLayer,"Lokasi UMKM")}function v(){const e=document.getElementById("categoryFilter"),r=t.categories.every(a=>a.isActive);let i=`
    <button data-action="${r?"none":"all"}" class="badge shrink-0 badge-lg cursor-pointer relative badge-primary mr-2 rounded-full">
      <span class="${r?"icon-[tabler--trash]":"icon-[tabler--check]"} size-4.5"></span>
      ${r?"Hapus Filter":"Pilih Semua"}
      <div class="border-l-2 border-base-content h-5 absolute right-0 translate-x-2.5"></div>
    </button>`;i+=t.categories.map(a=>{const l=a.isActive?"badge-primary":"badge-outline";return`<button data-category="${a.name}" class="badge shrink-0 badge-lg cursor-pointer w-fit ${l} rounded-full">${a.name}</button>`}).join(""),e.innerHTML=i}function x(){const e=document.getElementById("categoryFilter"),r=document.getElementById("search-umkm"),n=document.getElementById("clear-search-button"),u=document.getElementById("search-icon"),c=document.getElementById("complain-form-element"),i=document.getElementById("form-complain-status");n.addEventListener("click",()=>{r.value="",t.searchTerm="",k(),u.dataset.icon="search"}),r.addEventListener("input",o=>{t.searchTerm=o.target.value,u.dataset.icon=t.searchTerm?"x":"search",clearTimeout(t.searchTimeout),t.searchTimeout=setTimeout(()=>k(),400)}),e.addEventListener("click",o=>{const m=o.target.closest("button");if(!m)return;const s=m.dataset.category,p=m.dataset.action;if(p){const g=p==="all";t.categories.forEach(y=>y.isActive=g)}else if(s){const g=t.categories.find(y=>y.name===s);g&&(g.isActive=!g.isActive)}v(),k()}),HSOverlay.autoInit();const{element:a}=HSOverlay.getInstance("#form-complain",!0);a.on("close",f),window.openComplainForm=o=>{setTimeout(()=>{document.getElementById("umkm_name").value=o},100),i.innerHTML="",a.open()},c.addEventListener("submit",l);async function l(o){const m=document.getElementById("form-complain-submit-button");o.preventDefault();const s=new FormData(o.target);s.get;const p={name:s.get("name")||"",email:s.get("email")||"",phoneNumber:s.get("phone")||"",complainee:s.get("umkm_name"),subject:s.get("complaint_subject"),complaintText:s.get("complaint_text")};if(!p.subject){i.className="text-error",i.innerHTML="Judul Keluhan tidak boleh kosong!";return}if(!p.complaintText){i.className="text-error",i.innerHTML="Isi Keluhan tidak boleh kosong!";return}m.disabled=!0,m.innerHTML="Mengirim",await B()?(i.className="text-success",i.innerHTML=`
        Keluhan berhasil dikirim!
        <div class="radial-progress auto-close-modal text-primary" style="--value:100; --size:1rem; --thickness:3px" role="progressbar" aria-label="Radial Progress"></div>`,f(),setTimeout(()=>{a.close(),i.innerHTML="",m.disabled=!1},3e3)):i.innerHTML="Gagal mengirim keluhan. Silakan coba lagi.",m.innerHTML="Kirim"}}function w(e){const r=t.visibleMarker[e];if(r){const n=structuredClone(r.getLatLng());n.lat+=.001,r.openPopup(),t.map.flyTo(n,18,{duration:1}),document.getElementById("close-search")?.click()}else console.warn(`Marker with ID ${e} not found.`)}function C(){const e=document.getElementById("legend-content");let r='<div class="h-full">';for(const n of t.categories)r+=`
    <div class="flex items-center gap-1">
      <span style="background:${t.colors[n.name]}" class="size-4 ${b[n.name]}"></span>
      <span>${n.name}</span>
    </div>
    `;e.innerHTML=r+"</div>"}function A(){const{routing:e}=t;document.getElementById("routeToggleBtn").addEventListener("click",()=>{const n=document.getElementById("routingPanel");n.style.display=n.style.display==="none"||n.style.display===""?"block":"none"}),document.getElementById("initalPointBtn").addEventListener("click",()=>{e.selectingStart=!0,e.selectingEnd=!1,alert("Klik di peta untuk titik awal")}),document.getElementById("endPointBtn").addEventListener("click",()=>{e.selectingEnd=!0,e.selectingStart=!1,alert("Klik di peta untuk titik tujuan")}),document.getElementById("initalResetBtn").addEventListener("click",()=>{e.startMarker&&t.map.removeLayer(e.startMarker),e.startMarker=null,e.startPoint=null}),document.getElementById("endResetBtn").addEventListener("click",()=>{e.endMarker&&t.map.removeLayer(e.endMarker),e.endMarker=null,e.endPoint=null}),document.getElementById("findRouteBtn").addEventListener("click",r),t.map.on("click",n=>{e.selectingStart?(e.startMarker&&t.map.removeLayer(e.startMarker),e.startPoint=n.latlng,e.startMarker=d.marker(e.startPoint,{icon:e.markericon}).addTo(t.map),e.selectingStart=!1):e.selectingEnd&&(e.endMarker&&t.map.removeLayer(e.endMarker),e.endPoint=n.latlng,e.endMarker=d.marker(e.endPoint,{icon:e.markericon}).addTo(t.map),e.selectingEnd=!1)});function r(){if(!e.startPoint||!e.endPoint){alert("Tentukan titik awal dan tujuan.");return}e.control&&t.map.removeControl(e.control),e.control=d.Routing.control({waypoints:[e.startPoint,e.endPoint],lineOptions:{styles:[{color:"green",weight:4}]},routeWhileDragging:!1,createMarker:()=>null}).addTo(t.map),e.control.on("routesfound",n=>{const u=n.routes[0].summary,c=Math.round(u.totalTime/60),i=(u.totalDistance/1e3).toFixed(2);document.getElementById("routeInfo").innerText=`Durasi: ${c} menit | Jarak: ${i} km`})}}document.addEventListener("DOMContentLoaded",T);
